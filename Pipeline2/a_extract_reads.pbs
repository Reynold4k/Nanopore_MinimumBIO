#!/bin/bash
#PBS -l select=1:ncpus=16:mem=128gb        # Set the number of cores and memory
#PBS -l walltime=04:00:00                  # Estimated execution time
#PBS -j oe                                 # Join stderr and stdout
#PBS -o /srv/scratch/z3546698/true/Small_Molecule/JQ1/CoT/240302/potential_hit/extract.log
#PBS -N extract_hits                       # Job name
#PBS -m abe                                # Email notifications: abort, begin, end

module load samtools/1.20

# Paths to directories and files
PARENT_DIR="/srv/scratch/z3546698/true/Small_Molecule/FK506/T7MB-2/231119/R3/step2"
OUTPUT_DIR="/srv/scratch/z3546698/true/Small_Molecule/FK506/T7MB-2/231119/potential_hit"
ANN_FILE="/srv/scratch/z3546698/true/reference/Homo_sapiens.GRCh38.110.gtf"

# Ensure the output directory exists
mkdir -p "$OUTPUT_DIR"

# List of genes to process
GENES=("FKBP1A" "FKBP1C") # Add your desired gene names here

# Loop through each gene
for gene_name in "${GENES[@]}"; do
  # Extract all locations for hits from the GTF file and prefix with 'chr'
  Hit_LOCATIONS=$(awk -v gene="$gene_name" '$3 == "exon" && $0 ~ gene {print "chr"$1":"$4"-"$5}' "$ANN_FILE")

  # Skip to next gene if no locations are found
  if [ -z "$Hit_LOCATIONS" ]; then
    echo "No potential hit locations found for $gene_name in the annotation file."
    continue
  fi

  # Loop over each sorted BAM file
  cd "$PARENT_DIR"
  for bam_file in *_trimmed_sorted.bam; do
    # Check and create index if needed
    if [ ! -f "$bam_file.bai" ]; then
      echo "Indexing $bam_file..."
      samtools index "$bam_file"
    fi

    OUTPUT_BAM="${OUTPUT_DIR}/${gene_name}_Hit_${bam_file}"
    echo "Extracting potential hits for $gene_name from $bam_file to $OUTPUT_BAM..."

    # Extract reads for all potential hits locations
    samtools view -b "$bam_file" $Hit_LOCATIONS > "$OUTPUT_BAM"
  done
done

echo "Extraction complete."
